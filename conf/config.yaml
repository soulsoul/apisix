apisix:
  node_listen: 9080              # APISIX listening port
  node_ssl_listen: 9443
  enable_heartbeat: true
  enable_admin: true
  enable_debug: false
  enable_ipv6: true
  config_center: etcd             # etcd: use etcd to store the config value
                                  # yaml: fetch the config value from local yaml file `/your_path/conf/apisix.yaml`
  # allow_admin:                  # http://nginx.org/en/docs/http/ngx_http_access_module.html#allow
  #   - 127.0.0.0/24              # If we don't set any IP list, then any IP access is allowed by default.
  #   - "::/64"
  # port_admin: 9180              # use a separate port
  real_ip_header: "X-Real-IP"     # http://nginx.org/en/docs/http/ngx_http_realip_module.html#real_ip_header
  real_ip_from:                   # http://nginx.org/en/docs/http/ngx_http_realip_module.html#set_real_ip_from
    - 127.0.0.1
    - 'unix:'
  router:
    http: 'radixtree_uri'         # r3_uri: match route by uri(base on r3)
                                  # r3_host_uri: match route by host + uri(base on r3)
                                  # radixtree_uri: match route by uri(base on radixtree)

    ssl: 'radixtree_sni'          # r3_sni: match route by SNI(base on r3)
                                  # radixtree_sni: match route by SNI(base on radixtree)
  # stream_proxy:                 # TCP/UDP proxy
  #   tcp:                        # TCP proxy port list
  #     - 9100
  #     - 9101
  #   udp:                        # UDP proxy port list
  #     - 9200
  #     - 9211
  dns_resolver:                   # use 114.114.114.114 as default DNS resolver, disable IPv6 and enable local DNS.
    - 114.114.114.114

nginx_config:                     # config for render the template to genarate nginx.conf
  error_log: "logs/error.log"
  error_log_level: "warn"         # warn,error
  event:
    work_connections: 10620
    use_epoll: true
    multi_accept: on
  http:
    access_log: "log/access.log"
    keepalive_timeout: 60s         # timeout during which a keep-alive client connection will stay open on the server side.
    client_header_timeout: 60s     # timeout for reading client request header, then 408 (Request Time-out) error is returned to the client
    client_body_timeout: 60s       # timeout for reading client request body, then 408 (Request Time-out) error is returned to the client
    send_timeout: 10s              # timeout for transmitting a response to the client.then the connection is closed

etcd:
  host: "http://127.0.0.1:2379"   # etcd address
  prefix: "/apisix"               # apisix configurations prefix
  timeout: 1                      # 1 seconds

plugins:                          # plugin list
  - example-plugin
  - limit-req
  - limit-count
  - limit-conn
  - key-auth
  - prometheus
  - node-status
  - jwt-auth
  - zipkin
  - ip-restriction
  - grpc-transcode
  - serverless-pre-function
  - serverless-post-function
  - openid-connect

stream_plugins:
  - mqtt-proxy
